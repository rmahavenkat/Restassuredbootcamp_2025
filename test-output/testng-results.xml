<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="55" passed="51" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-13T11:37:27 CDT" name="Default suite" finished-at="2025-06-13T11:37:55 CDT" duration-ms="27502">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-06-13T11:37:27 CDT" name="Default test" finished-at="2025-06-13T11:37:55 CDT" duration-ms="27502">
      <class name="api_Runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:27 CDT" name="setUpClass" finished-at="2025-06-13T11:37:28 CDT" duration-ms="659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@30eee098]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:28 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:33 CDT" duration-ms="5395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retreive all user details with valid end point and with authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["get all users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:33 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:34 CDT" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retreive all user details with valid end point and without authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["get all users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:34 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:34 CDT" duration-ms="362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retreive all user details with valid end point and invalid authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["get all users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:34 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:35 CDT" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retreive all user details with invalid end point and valid authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["get all users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:35 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:35 CDT" duration-ms="362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retreive all user details with valid end point and invalid method"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["get all users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:35 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:35 CDT" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add New User with all fields without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:35 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:36 CDT" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with invalid base url"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:36 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:36 CDT" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with invalid end point"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:36 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:37 CDT" duration-ms="393" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with non mandetory fields only"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <500>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at api_stepDefinition.Post_SD.user_receives_bad_requeststatus_with_message(Post_SD.java:115)
at ✽.User receives 400 Bad Requeststatus with message(file:///C:/Users/rmaha/eclipse-workspace/RESTAssuredAPIBootcampMay2025_BDD/src/test/resources/api_featurefiles/02_Post.feature:28)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:37 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:37 CDT" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with all fields empty"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:37 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:37 CDT" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with interger values in first name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:37 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:38 CDT" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with special characters in first name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:38 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:38 CDT" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with interger values in Last name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:38 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:38 CDT" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with special characters in first name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:38 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:39 CDT" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with alphabets in contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:39 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:39 CDT" duration-ms="377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with special characters in contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:39 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:40 CDT" duration-ms="369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with less than 10 characters in contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:40 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:40 CDT" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with more than 10 characters in contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:40 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:40 CDT" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with invalid email format"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:40 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:41 CDT" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with special characters in email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:41 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:41 CDT" duration-ms="378" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with number in email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <409>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <409>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at api_stepDefinition.Post_SD.user_receives_bad_requeststatus_with_message(Post_SD.java:115)
at ✽.User receives 400 Bad Requeststatus with message(file:///C:/Users/rmaha/eclipse-workspace/RESTAssuredAPIBootcampMay2025_BDD/src/test/resources/api_featurefiles/02_Post.feature:101)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:41 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:42 CDT" duration-ms="391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with plot number contains interger values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:42 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:42 CDT" duration-ms="362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with plot number contains special characters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:42 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:42 CDT" duration-ms="409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with Street contains interger values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:42 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:43 CDT" duration-ms="448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with Street contains special characters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:43 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:43 CDT" duration-ms="381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with State contains interger values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:43 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:43 CDT" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with State contains special characters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:43 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:44 CDT" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with country contains interger values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:44 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:44 CDT" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with country contains special characters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:44 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:45 CDT" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with zipcode contains alphabet values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:45 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:45 CDT" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with zipcode contains special characters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:45 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:46 CDT" duration-ms="644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add New User with all fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:46 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:46 CDT" duration-ms="377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with existing contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:46 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:46 CDT" duration-ms="388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add new user with existing email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:46 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:47 CDT" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retrieve user details with  valid user Id and without authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:47 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:47 CDT" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retrieve user details with  valid user Id and invalid authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:47 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:47 CDT" duration-ms="29" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retrieve user details with  valid authorization and invalid user Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: id=30182.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: id=30182.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:89)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.request(RequestSpecificationImpl.groovy:296)
at io.restassured.internal.RequestSpecificationImpl.request(RequestSpecificationImpl.groovy)
at api_stepDefinition.GETByUserID_SD.admin_sends_https_request_with_invalid_user_id(GETByUserID_SD.java:63)
at ✽.Admin sends HTTPS Request with invalid user Id(file:///C:/Users/rmaha/eclipse-workspace/RESTAssuredAPIBootcampMay2025_BDD/src/test/resources/api_featurefiles/03_getByUserId.feature:22)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:47 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:47 CDT" duration-ms="363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retrieve user details with  valid user Id and invalid method"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:47 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:48 CDT" duration-ms="409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retrieve user details with  valid authorization and valid user Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:48 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:48 CDT" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retrieve user details with valid user first name and without authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:48 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:49 CDT" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retrieve user details with  valid user first name and invalid authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:49 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:49 CDT" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to retrieve user details with  valid authorization and valid user first name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["creating new users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:49 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:50 CDT" duration-ms="728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update user details with No Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:50 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:50 CDT" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update user details with user id and all fields empty"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:50 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:50 CDT" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update First name with numbers and Special characters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:50 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:51 CDT" duration-ms="454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update  Last name with numbers and Special characters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:51 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:51 CDT" duration-ms="610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update Contact number with more than 10 character"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:51 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:52 CDT" duration-ms="615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update user details with Alphabets for Contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:52 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:53 CDT" duration-ms="472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update user details with valid user id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:53 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:53 CDT" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update user details with No Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users with single field"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:53 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:53 CDT" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update First Name with valid user id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["updating the users with single field"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:53 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:54 CDT" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Delete operation with valid userID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["delete the users with userID"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:54 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:54 CDT" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Delete operation with non existing userID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["delete the users with userID"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:54 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:54 CDT" duration-ms="371" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Delete operation with valid firstname"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["delete the users with userName"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at api_stepDefinition.deletebyUserName_SD.user_receives_ok_status_success(deletebyUserName_SD.java:42)
at ✽.user receives 200:ok status Success(file:///C:/Users/rmaha/eclipse-workspace/RESTAssuredAPIBootcampMay2025_BDD/src/test/resources/api_featurefiles/DeleteByUserName.feature:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:54 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-13T11:37:55 CDT" duration-ms="367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Delete operation with non existing firstname"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["delete the users with userName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:api_Runner.TestRunner@68567e20]" started-at="2025-06-13T11:37:55 CDT" name="tearDownClass" finished-at="2025-06-13T11:37:55 CDT" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- api_Runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
